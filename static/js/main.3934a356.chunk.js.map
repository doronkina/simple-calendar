{"version":3,"sources":["imgs/arrowDown.svg","imgs/logo.svg","imgs/bell.svg","imgs/searching.svg","imgs/navBtns/analytics.svg","imgs/navBtns/product.svg","imgs/navBtns/users.svg","imgs/navBtns/siteBuilder.svg","imgs/navBtns/broadcasts.svg","imgs/navBtns/mailingLists.svg","imgs/navBtns/marketing.svg","imgs/navBtns/payments.svg","imgs/navBtns/settings.svg","imgs/navIcon.svg","imgs/arrowLeft.svg","imgs/arrowRight.svg","imgs/cancel.svg","imgs/trash.svg","imgs/edit.svg","components/Header/Header.jsx","components/NavPanel/NavBtns/NavBtns.jsx","components/NavPanel/NavPanel.jsx","components/Calendar/Calendar.jsx","store/reducers/calendarReducer.js","components/Calendar/CalendarContainer.jsx","components/Users/FiltrationInterval/FiltrationInterval.jsx","components/Users/FiltrationInterval/FiltrationIntervalContainer.jsx","imgs/svg/arrowDown.jsx","imgs/svg/calendar.jsx","imgs/svg/filter.jsx","components/Users/FilterUsersPanel/FilterUsersPanel.jsx","components/Users/FilteredUsers/Thead/Thead.jsx","components/Users/FilteredUsers/Tbody/Tbody.jsx","components/Users/FilteredUsers/Tbody/TbodyContainer.jsx","components/Users/FilteredUsers/FilteredUsers.jsx","components/Users/Users.jsx","App.js","serviceWorker.js","store/reducers/usersReducer.js","store/store.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","bell","arrowDown","searching","NavBtns","analytics","product","users","siteBuilder","broadcasts","mailingLists","marketing","payments","settings","NavPanel","useState","navBtns","showNavBtns","onClick","navIcon","Calendar","props","currentMonth","moment","format","month","changeMonth","currentYear","year","changeYear","calendar","firstMarkedDate","secondMarkedDate","editFirstMarkedDate","editSecondMarkedDate","markDate","e","data","target","id","daysInMonth","firstDayOfMonth","startOf","previousMonthDays","i","lastDay","push","key","currentMonthDays","spanClasses","tdClasses","renderMonth","day","length","rows","cells","forEach","row","insertRow","slice","markDaysNumber","daysNumber","markMonth","monthNumber","markYesterday","arrowLeft","newMonth","previousMonth","arrowRight","nextMonth","weekdaysShort","map","d","showCalendar","showDateInterval","initialState","calendarReducer","state","action","type","connect","FiltrationInterval","secondDay","secondMonth","secondYear","firstDate","secondDate","firstDay","firstMonth","firstYear","cancel","ArrowDown","width","height","viewBox","xmlns","Filter","FilterUsersPanel","dateInterval","Thead","FilteredUsers","user","name","email","registrationDate","lastActivity","lastAction","edit","trash","Tbody","Users","App","Boolean","window","location","hostname","match","usersReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3934a356.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrowDown.fe8d3a55.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.6fb64296.svg\";","module.exports = __webpack_public_path__ + \"static/media/bell.74a1e2cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/searching.678baa59.svg\";","module.exports = __webpack_public_path__ + \"static/media/analytics.20754144.svg\";","module.exports = __webpack_public_path__ + \"static/media/product.17a2e73f.svg\";","module.exports = __webpack_public_path__ + \"static/media/users.1efe1a53.svg\";","module.exports = __webpack_public_path__ + \"static/media/siteBuilder.531c9d9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadcasts.0529b839.svg\";","module.exports = __webpack_public_path__ + \"static/media/mailingLists.a855ef1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/marketing.bfd085fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/payments.57d854cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.615adcff.svg\";","module.exports = __webpack_public_path__ + \"static/media/navIcon.a80ecac1.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowLeft.82ede423.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowRight.2a4c1ccf.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel.f6672e1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.2531a105.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.f5630fbe.svg\";","import React from 'react';\n\nimport logo from '../../imgs/logo.svg';\nimport bell from '../../imgs/bell.svg';\nimport arrowDown from '../../imgs/arrowDown.svg';\nimport searching from '../../imgs/searching.svg';\n\nimport './Header.scss';\n\nconst Header = () => {\n    return (\n        <header>\n            <div className=\"logo\">\n                <img src={logo} alt=\"logo\" />\n                Beta\n            </div>\n            <div className=\"headerBtns\">\n                <button className=\"circle lightHeaderBtn\">\n                    <img src={bell} alt=\"bell\" />\n                </button>\n                <button className=\"userSettings lightHeaderBtn\">\n                    Артем\n                    <img src={arrowDown} alt=\"arrowDown\" />\n                </button>\n                <button className=\"circle darkHeaderBtn\">\n                    <img src={searching} alt=\"searching\" />\n                </button>\n                <button className=\"languageSettings darkHeaderBtn\">\n                    Ru\n                    <img src={arrowDown} alt=\"arrowDown\" />\n                </button>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nimport analytics from '../../../imgs/navBtns/analytics.svg';\nimport product from '../../../imgs/navBtns/product.svg';\nimport users from '../../../imgs/navBtns/users.svg';\nimport siteBuilder from '../../../imgs/navBtns/siteBuilder.svg';\nimport broadcasts from '../../../imgs/navBtns/broadcasts.svg';\nimport mailingLists from '../../../imgs/navBtns/mailingLists.svg';\nimport marketing from '../../../imgs/navBtns/marketing.svg';\nimport payments from '../../../imgs/navBtns/payments.svg';\nimport settings from '../../../imgs/navBtns/settings.svg';\n\nimport './NavBtns.scss';\n\nconst NavBtns = () => {\n    return (\n        <div className=\"navBtns\">\n            <div>\n                <img src={analytics} alt=\"analytics\" />\n                <span>Аналитика</span>\n            </div>\n            <div>\n                <img src={product} alt=\"product\" />\n                <span>Продукт</span>\n            </div>\n            <div className=\"currentPage\">\n                <img src={users} alt=\"users\" />\n                <span>Пользователи</span>\n            </div>\n            <div>\n                <img src={siteBuilder} alt=\"siteBuilder\" />\n                <span>Конструкор сата</span>\n            </div>\n            <div>\n                <img src={broadcasts} alt=\"broadcasts\" />\n                <span>Трансляции</span>\n            </div>\n            <div>\n                <img src={mailingLists} alt=\"mailingLists\" />\n                <span>Рассылка</span>\n            </div>\n            <div>\n                <img src={marketing} alt=\"marketing\" />\n                <span>Маркетинг</span>\n            </div>\n            <div>\n                <img src={payments} alt=\"payments\" />\n                <span>Платежи</span>\n            </div>\n            <div>\n                <img src={settings} alt=\"settings\" />\n                <span>Настроки</span>\n            </div>\n        </div>\n    );\n}\n\nexport default NavBtns;\n","import React, {useState} from 'react';\n\nimport NavBtns from './NavBtns/NavBtns';\n\nimport arrowDown from '../../imgs/arrowDown.svg';\nimport navIcon from '../../imgs/navIcon.svg';\n\nimport './NavPanel.scss';\n\nconst NavPanel = () => {\n    let [navBtns, showNavBtns] = useState(true);\n\n    return (\n        <nav>\n            <div className=\"navMenu\">\n                <button className=\"navBtn\" onClick={ () => showNavBtns(!navBtns) }>\n                    Эксперт\n                </button>\n                {navBtns ?\n                    <button className=\"arrowBtn\" onClick={ () => showNavBtns(!navBtns) }>\n                        <img src={arrowDown} alt=\"arrowDown\" />\n                    </button> :\n                    <div></div>\n                }\n                <button className=\"imgBtn\">\n                    <img src={navIcon} alt=\"navIcon\" />\n                </button>\n            </div>\n            {navBtns ? <NavBtns /> : null}\n        </nav>\n    );\n}\n\nexport default NavPanel;\n","import React, {useState} from 'react';\nimport moment from 'moment';\n\nimport './Calendar.scss';\n\nimport arrowLeft from '../../imgs/arrowLeft.svg';\nimport arrowRight from '../../imgs/arrowRight.svg';\n\nconst Calendar = props => {\n    // set a month and a year\n    const currentMonth = moment().format('MM');\n    let [month, changeMonth] = useState(currentMonth);\n\n    const currentYear = moment().format('YYYY');\n    let [year, changeYear] = useState(currentYear);\n\n    // set selected days (default - today)\n    let {firstMarkedDate, secondMarkedDate} = props.calendar;\n    let {editFirstMarkedDate, editSecondMarkedDate} = props;\n    const markDate = e => {\n        const data = e.target.id;\n        \n        if (firstMarkedDate === data) {\n            if (secondMarkedDate) {\n                editFirstMarkedDate(secondMarkedDate);\n                editSecondMarkedDate(null);\n            } else {\n                editFirstMarkedDate(null);\n            }\n        } else if (secondMarkedDate === data) {\n            editSecondMarkedDate(null);\n        } else if (!firstMarkedDate) {\n            editFirstMarkedDate(data);\n        } else if (!secondMarkedDate) {\n            if (data > firstMarkedDate) {\n                editSecondMarkedDate(data);\n            } else {\n                editSecondMarkedDate(firstMarkedDate);\n                editFirstMarkedDate(data);\n            }\n        } else if (firstMarkedDate && secondMarkedDate) {\n            if (data < secondMarkedDate) {\n                editFirstMarkedDate(data);\n            } else {\n                editSecondMarkedDate(data);\n            }\n        } \n    }\n\n    // create the set month\n    const daysInMonth = month => moment(`${year}-${month}`, 'YYYY-MM').daysInMonth();\n    const firstDayOfMonth = moment(`${year}-${month}`, 'YYYY-MM').startOf('month').format('d');\n\n    const previousMonthDays = [];\n    for (let i = 0; i < firstDayOfMonth; i++) {\n        let lastDay = (month === '01') ? 12 : daysInMonth(month - 1);\n        \n        previousMonthDays.push(\n            <td key={i + 40}>\n                <span className=\"noCurrentMonthDate\">\n                    {lastDay - firstDayOfMonth + 1 + i}\n                </span>\n            </td>\n        );\n    }\n\n    const currentMonthDays = [];\n    for (let i = 1; i <= daysInMonth(month); i++) {\n        const id = moment(`${year}-${month}-${i}`, 'YYYY-MM-DD').format('L');\n\n        let spanClasses = 'currentMonthDay';\n        if (firstMarkedDate === id || secondMarkedDate === id) {\n            spanClasses += ' markedDate';\n        } \n        \n        let tdClasses = secondMarkedDate ? \n            ( firstMarkedDate === id ? 'firstMarkedDate' : \n            (secondMarkedDate === id ? 'secondMarkedDate' : null) ) : null\n        if (secondMarkedDate && id > firstMarkedDate && id < secondMarkedDate) {\n            tdClasses = 'includesDate';\n        }\n\n        currentMonthDays.push(\n            <td key={i} className={tdClasses}>\n                <span className={spanClasses} id={id} onClick={ e => markDate(e) }>\n                    {i}\n                </span>\n            </td>\n        )\n    }\n\n    const renderMonth = [...previousMonthDays, ...currentMonthDays];\n    let day = 1;\n    while (renderMonth.length % 7 !== 0) {\n        renderMonth.push(\n            <td key={day + 50}>\n                <span className=\"noCurrentMonthDate\">\n                    {day}\n                </span>\n            </td>\n        );\n        day++\n    }\n\n    // the set month\n    const rows = [];\n    let cells = [];\n    renderMonth.forEach( (row, i) => {\n        if (i % 7 !== 0) {\n            cells.push(row);\n        } else {\n            const insertRow = cells.slice();\n            rows.push(insertRow);\n            cells = [];\n            cells.push(row);\n        }\n        if (i === renderMonth.length - 1) {\n            const insertRow = cells.slice();\n            rows.push(insertRow);\n        }\n    } )\n\n    // .calendarNav\n    const previousMonth = () => {\n        if (month === '01') changeYear(`${year - 1}`);\n\n        const newMonth = (month === '01') ? '12' : moment(`${month - 1}`, 'MM').format('MM');\n        changeMonth(newMonth);\n    }\n    const nextMonth = () => {\n        if (month === '12') changeYear(`${+year + 1}`);\n\n        const newMonth = (month === '12') ? '01' : moment(`${+month + 1}`).format('MM');\n        changeMonth(newMonth);\n    }\n\n    // .calendarBtns\n    const markToday = () => {\n        editFirstMarkedDate( moment().format('L') );\n        if (secondMarkedDate) editSecondMarkedDate(null);\n    }\n    const markYesterday = () => {\n        const year = moment().format('Y');\n        const month = moment().format('MM');\n        const day = moment().format('DD') - 1;\n        \n        editFirstMarkedDate( moment(`${year}-${month}-${day}`, 'YYYY-MM-DD' ).format('L') );\n        if (secondMarkedDate) editSecondMarkedDate(null);\n    }\n    const markDaysNumber = daysNumber => {\n        let year, month;\n        let day = moment().format('DD') - daysNumber + 1;\n\n        if (day > 0) {\n            year = moment().format('Y');\n            month = moment().format('MM');\n        } else {\n            month = moment().format('MM') - 1;\n\n            if (month) {\n                year = moment().format('Y');\n            } else {\n                year = moment().format('Y') - 1;\n                month = '12';\n            }\n            day += daysInMonth(month);\n        }\n        \n        editFirstMarkedDate( moment(`${year}-${month}-${day}`, 'YYYY-MM-DD').format('L') );\n        editSecondMarkedDate( moment().format('L') );\n    }\n    const markMonth = monthNumber => {\n        let year = monthNumber ? moment().format('Y') : moment().format('Y') - 1;\n        let month = monthNumber ? monthNumber : '12';\n        const lastDay = daysInMonth(month);\n        \n        editFirstMarkedDate( moment(`${year}-${month}-01`, 'YYYY-MM-DD').format('L') );\n        editSecondMarkedDate( moment(`${year}-${month}-${lastDay}`, 'YYYY-MM-DD').format('L') );\n    }\n\n    // .activeUpdateBtn\n    const setDateInterval = () => {\n        if (firstMarkedDate) {\n            props.showCalendar(false);\n            props.showDateInterval(true);\n        }\n    }\n\n    return (\n        <div className=\"calendarBg\">\n            <div className=\"calendarWrapper\">\n                <div className=\"calendarBtns\">\n                    <button>Весь срок</button>\n                    <button onClick={ () => markToday() }>Сегодня</button>\n                    <button onClick={ () => markYesterday() }>Вчера</button>\n                    <button onClick={ () => markDaysNumber(7) }>Последние 7 дней</button>\n                    <button onClick={ () => markDaysNumber(30) }>Последние 30 дней</button>\n                    <button onClick={ () => markMonth( moment().format('MM') ) }>В этом месяце</button>\n                    <button onClick={ () => markMonth( moment().format('MM') - 1 ) }>Прошлы месяц</button>\n                </div>\n                <div className=\"calendar\">\n                    <div className=\"calendarNav\">\n                        <img src={arrowLeft} alt=\"arrowLeft\" onClick={ () => previousMonth() } />\n                        { moment(`${month}`, 'MM').format('MMMM') }, {year}\n                        <img src={arrowRight} alt=\"arrowRight\" onClick={ () => nextMonth() } />\n                    </div>\n                    <table>\n                        <thead>\n                            <tr>\n                                { moment.weekdaysShort().map(day => <th key={day}>{day}</th>) }\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { rows.map( (d, i) => i !== 0 ? <tr key={i * 100}>{d}</tr> : null ) }\n                        </tbody>\n                    </table>\n                    <div className=\"submitForm\">\n                        <button className=\"cancel\" onClick={ () => props.showCalendar(false) }>\n                            Отмена\n                        </button>\n                        <button className={ firstMarkedDate ? 'activeUpdateBtn' : 'update' } onClick={ () => setDateInterval() }>\n                            Обновить\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Calendar;","import moment from 'moment';\n\nconst EDIT_FIRST_MARKED_DATE = 'EDIT-FIRST-MARKED-DATE';\nconst EDIT_SECOND_MARKED_DATE = 'EDIT-SECOND-MARKED-DATE';\n\nlet initialState = {\n    firstMarkedDate: moment().format('L'),\n    secondMarkedDate: null\n};\n\nconst calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case EDIT_FIRST_MARKED_DATE:\n            return {\n                ...state,\n                firstMarkedDate: action.firstMarkedDate\n            }\n        case EDIT_SECOND_MARKED_DATE:\n            return {\n                ...state,\n                secondMarkedDate: action.secondMarkedDate\n            }\n        default:\n            return state\n    }\n}\n\nexport const editFirstMarkedDate = firstMarkedDate => ( {type: EDIT_FIRST_MARKED_DATE, firstMarkedDate} );\nexport const editSecondMarkedDate = secondMarkedDate => ( {type: EDIT_SECOND_MARKED_DATE, secondMarkedDate} );\n\nexport default calendarReducer;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Calendar from './Calendar';\n\nimport {editFirstMarkedDate, editSecondMarkedDate} from '../../store/reducers/calendarReducer';\n\nconst CalendarContainer = props => {\n    return <Calendar calendar={props.calendar} {...props} />\n}\n\nlet mapStateToProps = state => {\n    return {\n        calendar: state.calendar\n    }\n};\n\nexport default connect(mapStateToProps, {editFirstMarkedDate, editSecondMarkedDate})(CalendarContainer);","import moment from 'moment';\n\nimport React from 'react';\n\nimport cancel from '../../../imgs/cancel.svg';\n\nimport './FiltrationInterval.scss';\n\nconst FiltrationInterval = props => {\n    const {firstMarkedDate: firstDate, secondMarkedDate: secondDate} = props.calendar;\n    \n    const firstDay = firstDate.slice(3, 5);\n    const firstMonth = moment(`${firstDate.slice(0, 2)}`, 'MM').format('MMM');\n    const firstYear = firstDate.slice(6);\n\n    let secondDay, secondMonth, secondYear;\n    if (secondDate) {\n        secondDay = secondDate.slice(3, 5);\n        secondMonth = moment(`${secondDate.slice(0, 2)}`, 'MM').format('MMM');\n        secondYear = firstDate.slice(6);\n    }\n\n    return (\n        <div className=\"filtrationInterval\">\n            <div className=\"timeInterval\">\n                {`${firstDay} ${firstMonth} ${firstYear !== secondYear ? firstYear : ''}\n                ${secondDate ? ` - ${secondDay} ${secondMonth} ${secondYear}` : ''}`}\n                <button onClick={ () => props.showDateInterval(false) }>\n                    <img src={cancel} alt=\"cancel\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default FiltrationInterval;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport FiltrationInterval from './FiltrationInterval';\n\nconst FiltrationIntervalContainer = props => {\n    return <FiltrationInterval calendar={props.calendar} {...props} />\n}\n\nlet mapStateToProps = state => {\n    return {\n        calendar: state.calendar\n    }\n};\n\nexport default connect(mapStateToProps)(FiltrationIntervalContainer);","import React from 'react';\n\nconst ArrowDown = () => {\n    return (\n        <svg width=\"9\" height=\"5\" viewBox=\"0 0 9 5\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M4.49451 4.8C4.28274 4.8 4.1416 4.72942 4.00043 4.58824L0.612155 1.20002C0.329802 0.917664 0.329802 0.494118 0.612155 0.211765C0.894508 -0.0705882 1.31805 -0.0705882 1.60041 0.211765L4.49451 3.10591L7.38861 0.211765C7.67096 -0.0705882 8.09451 -0.0705882 8.37686 0.211765C8.65921 0.494118 8.65921 0.917664 8.37686 1.20002L4.98859 4.58824C4.84741 4.72942 4.63568 4.8 4.49451 4.8Z\"/>\n        </svg>\n    )\n}\n\nexport default ArrowDown;","import React from 'react';\n\nconst Calendar = () => {\n    return (\n        <svg width=\"23\" height=\"20\" viewBox=\"0 0 23 20\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.5001 20H1C0.4 20 0 19.6 0 19V2.70001C0 2.10001 0.4 1.70001 1 1.70001H21.5001C22.1001 1.70001 22.5001 2.10001 22.5001 2.70001V19C22.5001 19.5 22.1001 20 21.5001 20ZM2 18H20.5001V3.70001H2V18Z\"/>\n        <path d=\"M17.7002 5.29999C17.1002 5.29999 16.7002 4.89999 16.7002 4.29999V1C16.7002 0.4 17.1002 0 17.7002 0C18.3002 0 18.7002 0.4 18.7002 1V4.29999C18.7002 4.89999 18.3002 5.29999 17.7002 5.29999Z\"/>\n        <path d=\"M5.00006 5.29999C4.40006 5.29999 4 4.89999 4 4.29999V1C4 0.4 4.40006 0 5.00006 0C5.60006 0 6.00006 0.4 6.00006 1V4.29999C6.00006 4.89999 5.50006 5.29999 5.00006 5.29999Z\"/>\n        <path d=\"M21.5002 8.60004H1.2002C0.900195 8.60004 0.700195 8.40004 0.700195 8.10004C0.700195 7.80004 0.900195 7.60004 1.2002 7.60004H21.5002C21.8002 7.60004 22.0002 7.80004 22.0002 8.10004C22.0002 8.30004 21.8002 8.60004 21.5002 8.60004Z\"/>\n        <path d=\"M5.7002 10.6H3.7002V12.5H5.7002V10.6Z\"/>\n        <path d=\"M9.00012 10.6H7.1001V12.5H9.00012V10.6Z\"/>\n        <path d=\"M12.3999 10.6H10.5V12.5H12.3999V10.6Z\"/>\n        <path d=\"M15.7998 10.6H13.7998V12.5H15.7998V10.6Z\"/>\n        <path d=\"M19.1002 10.6H17.2002V12.5H19.1002V10.6Z\"/>\n        <path d=\"M5.7002 13.7H3.7002V15.7H5.7002V13.7Z\"/>\n        <path d=\"M9.00012 13.7H7.1001V15.7H9.00012V13.7Z\"/>\n        <path d=\"M12.3999 13.7H10.5V15.7H12.3999V13.7Z\"/>\n        <path d=\"M15.7998 13.7H13.7998V15.7H15.7998V13.7Z\"/>\n        <path d=\"M19.1002 13.7H17.2002V15.7H19.1002V13.7Z\"/>\n        </svg>\n    )\n}\n\nexport default Calendar;\n","import React from 'react';\n\nconst Filter = () => {\n    return (\n        <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M3.2998 10.5C2.6998 10.5 2.2998 10.1 2.2998 9.5V1C2.2998 0.4 2.6998 0 3.2998 0C3.8998 0 4.2998 0.4 4.2998 1V9.5C4.2998 10 3.7998 10.5 3.2998 10.5Z\"/>\n        <path d=\"M3.2998 23.5C2.6998 23.5 2.2998 23.1 2.2998 22.5V15.2C2.2998 14.6 2.6998 14.2 3.2998 14.2C3.8998 14.2 4.2998 14.6 4.2998 15.2V22.5C4.2998 23.1 3.7998 23.5 3.2998 23.5Z\"/>\n        <path d=\"M3.29999 15.7999C1.49999 15.7999 0 14.3 0 12.5C0 10.7 1.49999 9.19995 3.29999 9.19995C5.09999 9.19995 6.60004 10.7 6.60004 12.5C6.60004 14.3 5.09999 15.7999 3.29999 15.7999ZM3.29999 11.2999C2.59999 11.2999 2 11.9 2 12.6C2 13.3 2.59999 13.8999 3.29999 13.8999C3.99999 13.8999 4.60004 13.3 4.60004 12.6C4.60004 11.9 3.99999 11.2999 3.29999 11.2999Z\"/>\n        <path d=\"M10.6997 15.2C10.0997 15.2 9.69971 14.8 9.69971 14.2V1C9.69971 0.4 10.0997 0 10.6997 0C11.2997 0 11.6997 0.4 11.6997 1V14.2C11.6997 14.7 11.2997 15.2 10.6997 15.2Z\"/>\n        <path d=\"M10.6997 23.5C10.0997 23.5 9.69971 23.1 9.69971 22.5V19.2C9.69971 18.6 10.0997 18.2 10.6997 18.2C11.2997 18.2 11.6997 18.6 11.6997 19.2V22.5C11.6997 23.1 11.2997 23.5 10.6997 23.5Z\"/>\n        <path d=\"M10.6999 19.7999C8.89989 19.7999 7.3999 18.3 7.3999 16.5C7.3999 14.7 8.89989 13.2 10.6999 13.2C12.4999 13.2 13.9999 14.7 13.9999 16.5C13.9999 18.3 12.4999 19.7999 10.6999 19.7999ZM10.6999 15.2999C9.99989 15.2999 9.3999 15.9 9.3999 16.6C9.3999 17.3 9.99989 17.8999 10.6999 17.8999C11.3999 17.8999 11.9999 17.3 11.9999 16.6C11.9999 15.9 11.3999 15.2999 10.6999 15.2999Z\"/>\n        <path d=\"M18.1997 5.69995C17.5997 5.69995 17.1997 5.29995 17.1997 4.69995V1C17.1997 0.4 17.5997 0 18.1997 0C18.7997 0 19.1997 0.4 19.1997 1V4.69995C19.1997 5.19995 18.7997 5.69995 18.1997 5.69995Z\"/>\n        <path d=\"M18.1997 23.5C17.5997 23.5 17.1997 23.1 17.1997 22.5V9.5C17.1997 8.9 17.5997 8.5 18.1997 8.5C18.7997 8.5 19.1997 8.9 19.1997 9.5V22.5C19.1997 23.1 18.7997 23.5 18.1997 23.5Z\"/>\n        <path d=\"M18.1999 10.2C16.3999 10.2 14.8999 8.6999 14.8999 6.8999C14.8999 5.0999 16.3999 3.59998 18.1999 3.59998C19.9999 3.59998 21.4999 5.0999 21.4999 6.8999C21.4999 8.6999 19.9999 10.2 18.1999 10.2ZM18.1999 5.69995C17.4999 5.69995 16.8999 6.3 16.8999 7C16.8999 7.7 17.4999 8.29993 18.1999 8.29993C18.8999 8.29993 19.4999 7.7 19.4999 7C19.4999 6.3 18.8999 5.69995 18.1999 5.69995Z\"/>\n        </svg>\n    )\n}\n\nexport default Filter;\n","import React, {useState} from 'react';\n\nimport CalendarContainer from '../../Calendar/CalendarContainer';\nimport FiltrationIntervalContainer from '../FiltrationInterval/FiltrationIntervalContainer';\n\nimport ArrowDownSvg from '../../../imgs/svg/arrowDown';\nimport CalendarSvg from '../../../imgs/svg/calendar';\nimport FilterSvg from '../../../imgs/svg/filter';\n\nimport './FilterUsersPanel.scss';\n\nconst FilterUsersPanel = () => {\n    let [calendar, showCalendar] = useState(false);\n    let [dateInterval, showDateInterval] = useState(false);\n\n    return (\n        <div className=\"filterUsersPanel\">\n            <div className=\"btns\">\n                <div className='filterBtns'>\n                    <div onClick={ () => showCalendar(true) }>\n                        <CalendarSvg />\n                        <span>\n                            За 1 день <ArrowDownSvg />\n                        </span>\n                    </div>\n                    <div>\n                        <FilterSvg />\n                        <span>\n                            Фильтр <ArrowDownSvg />\n                        </span>\n                    </div>\n                </div>\n                <div className=\"additionBtns\">\n                    {!dateInterval ? <button className=\"unloadBtn\">Выгрузить</button> : null}\n                    <button className=\"addContactsBtn\">Добавить контакты</button>\n                </div>\n            </div>\n            {calendar ? <CalendarContainer showCalendar={showCalendar} showDateInterval={showDateInterval} /> : \n                (dateInterval ? <FiltrationIntervalContainer showDateInterval={showDateInterval} /> : null)\n            }\n        </div>\n    )\n}\n\nexport default FilterUsersPanel;","import React from 'react';\n\nimport arrowDown from '../../../../imgs/arrowDown.svg';\n\nconst Thead = () => {\n    return (\n        <thead>\n            <tr>\n                <th className=\"firstCol\">\n                    <div className=\"checkbox\">\n                        <input type=\"checkbox\" />\n                    </div>\n                </th>\n                <th>Пользователь</th>\n                <th>Дата регистрации</th>\n                <th>Послядняя активность</th>\n                <th>Последнее действие</th>\n                <th>Продукт</th>\n                <th>\n                    <div className=\"tableSettings\">\n                        Отобразить\n                        <span>15</span>\n                        <img src={arrowDown} alt=\"arrowDown\" />\n                    </div>\n                </th>\n            </tr>\n        </thead>\n    )\n}\n\nexport default Thead;","import React from 'react';\n\nimport trash from '../../../../imgs/trash.svg';\nimport edit from '../../../../imgs/edit.svg';\n\nconst FilteredUsers = props => {\n    return (\n        <tbody>\n            {props.users.map(user => \n                <tr key={user.id}>\n                    <td className=\"firstCol\">\n                        <div className=\"checkbox\">\n                            <input type=\"checkbox\" />\n                        </div>\n                    </td>\n                    <td>\n                        <div className=\"userName\">{user.name}</div>\n                        <div className=\"email\">{user.email}</div>\n                    </td>\n                    <td>{user.registrationDate}</td>\n                    <td>{user.lastActivity}</td>\n                    <td className=\"shotText\">{user.lastAction}</td>\n                    <td className=\"shotText\">{user.product}</td>\n                    <td>\n                        <div className=\"userSettings\">\n                            <img src={edit} alt=\"edit\" />\n                            <img src={trash} alt=\"trash\" />\n                        </div>\n                    </td>\n                </tr>\n            )}\n        </tbody>\n    )\n}\n\nexport default FilteredUsers;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Tbody from './Tbody';\n\nconst TbodyContainer = props => {\n    return <Tbody users={props.users} />\n}\n\nlet mapStateToProps = state => {\n    return {\n        users: state.users.users\n    }\n};\n\nexport default connect(mapStateToProps)(TbodyContainer);","import React from 'react';\n\nimport Thead from './Thead/Thead';\nimport TbodyContainer from './Tbody/TbodyContainer';\n\nimport './FilteredUsers.scss';\n\nconst FilteredUsers = () => {\n    return (\n        <form>\n            <table>\n                <Thead />\n                <TbodyContainer />\n            </table>\n        </form>\n    )\n}\n\nexport default FilteredUsers;","import React from 'react';\n\nimport FilterUsersPanel from './FilterUsersPanel/FilterUsersPanel';\nimport FilteredUsers from './FilteredUsers/FilteredUsers';\n\nconst Users = () => {\n    return (\n        <main>\n            <FilterUsersPanel />\n            <FilteredUsers />\n        </main>\n    )\n}\n\nexport default Users;","import React from 'react';\n\nimport Header from './components/Header/Header';\nimport NavPanel from './components/NavPanel/NavPanel';\nimport Users from './components/Users/Users';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"mainWrapper\">\n        <NavPanel />\n        <Users />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\n    users: [\n        {\n            id: 1, \n            name: 'User1', \n            email: 'user1@user.com', \n            registrationDate: 'Февраль 1, 2020', \n            lastActivity: 'Февраль 1, 2020',\n            lastAction: 'view_landing_course1',\n            product: 'Как наладить отнош',\n        },\n        {\n            id: 2, \n            name: 'User2', \n            email: 'user2@user.com', \n            registrationDate: 'Февраль 1, 2020', \n            lastActivity: 'Февраль 1, 2020',\n            lastAction: 'view_landing_course1',\n            product: 'Как наладить отнош',\n        },\n        {\n            id: 3, \n            name: 'User3', \n            email: 'user3@user.com', \n            registrationDate: 'Февраль 1, 2020', \n            lastActivity: 'Февраль 1, 2020',\n            lastAction: 'view_landing_course1',\n            product: 'Как наладить отнош',\n        },\n        {\n            id: 4, \n            name: 'User4', \n            email: 'user4@user.com', \n            registrationDate: 'Февраль 1, 2020', \n            lastActivity: 'Февраль 1, 2020',\n            lastAction: 'view_landing_course1',\n            product: 'Как наладить отнош',\n        }\n    ]\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\nexport default usersReducer;","import {createStore, combineReducers} from 'redux';\n\nimport usersReducer from './reducers/usersReducer';\nimport calendarReducer from './reducers/calendarReducer';\n\nlet rootReducer = combineReducers({\n    users: usersReducer,\n    calendar: calendarReducer\n});\n\nlet store = createStore(\n    rootReducer\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}